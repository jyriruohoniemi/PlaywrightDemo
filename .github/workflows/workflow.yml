name: Playwright Tests
on:
  push:
    branches: [main, master, showcase-runner]
  pull_request:
    branches: [main, master, showcase-runner]

jobs:
  Main:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install --force

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Build and start Angular app
        run: |
          npm run
          npm start & npx wait-on http://localhost:4200

      - name: Run Playwright tests
        run: |
          # Run tests and save output to artifact directory
          mkdir -p playwright-results
          TEST_OUTPUT=$(npx playwright test --project=chromium --workers 4 2>&1)
          echo "$TEST_OUTPUT" > playwright-results/test-output.txt

      - name: Upload test output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-output
          path: playwright-results/test-output.txt

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/

      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: test-results/**/*.webm

      - name: Download test report
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Download test videos
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: test-videos
          path: test-results

      - name: Deploy report and videos
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          keep_files: false
          exclude_assets: ".github"

      - name: Download test output
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: test-output
          path: playwright-results

      - name: Get Github Token
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Update README with test results
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set timezone to Finnish time (Europe/Helsinki)
          export TZ=Europe/Helsinki

          # Download test output first
          mkdir -p playwright-results
          cp test-output.txt playwright-results/

          # Parse test counts
          PASSED=$(grep "passed" playwright-results/test-output.txt | grep -o '[0-9]\+ passed' | cut -d' ' -f1 || echo "0")
          FAILED=$(grep "failed" playwright-results/test-output.txt | grep -o '[0-9]\+ failed' | cut -d' ' -f1 || echo "0")
          SKIPPED=$(grep "skipped" playwright-results/test-output.txt | grep -o '[0-9]\+ skipped' | cut -d' ' -f1 || echo "0")
          DURATION=$(grep "passed" playwright-results/test-output.txt | grep -o '([0-9.]\+m)' || echo "(0m)")

          # Stash any local changes
          git stash

          # Pull latest changes
          git pull

          # Pop stashed changes
          git stash pop

          # Update README and push
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update test results in README [skip ci]"
          git push --force
